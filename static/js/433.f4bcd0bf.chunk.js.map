{"version":3,"file":"static/js/433.f4bcd0bf.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.div`\nposition: relative;\nwidth: 400px;\n display: flex;\n flex-direction: row;\n    gap: ${p => p.theme.spacing(6)} ;\n     &:hover {color: ${p => p.theme.colors.blue}};\n    &:focus {color: ${p => p.theme.colors.blue}};\n`\n\nexport const BtnTrash = styled.button`\nposition: absolute;\nright: 20px;\n`","\nimport { ListItem, BtnTrash } from './ContactItem.styled';\nimport { HiTrash } from 'react-icons/hi';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = (({ contact: { id, name, number }}) => {\n    const dispatch = useDispatch();\n    return (\n            <ListItem>\n                <span>{name}</span>\n                <span>{number}</span>\n                <BtnTrash type=\"button\" onClick={() => dispatch(deleteContact(id))}><HiTrash/></BtnTrash>\n            </ListItem>\n        )\n})\n\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(4)} ;\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading  = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n   [selectContacts, selectFilter],\n    (contacts, filter) => {\n     \n     return contacts.filter(item =>\n      item.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n      \n  }\n);\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactList = (() => {\n  \n   \n    const contacts = useSelector(selectFilteredContacts);\n\n    return (\n            <div>\n                <List>\n                    {contacts.map(item => (<li key={item.id}> <ContactItem\n                        contact = {item} />\n                    </li>) \n                )}\n                </List>\n            </div>\n        )\n})\n\n","\nimport styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n\n  padding: ${p => p.theme.spacing(1)};\n  margin-left: ${p => p.theme.spacing(2)};\n`;\n\nexport const StyledField = styled(Field)`\n  width: 400px;\n  padding: ${p => p.theme.spacing(2)};\n  margin-top: ${p => p.theme.spacing(3)};\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.orange};\n  font-size: 14px;\n`;\n\nexport const Label = styled.label`\n   \n   color: ${p => p.theme.colors.green};\n   font-size: 18px;\n`\n\nexport const BtnAdd = styled.button`\n\n  padding: ${p => p.theme.spacing(3)};\n \n   &:hover {color: ${p => p.theme.colors.blue}};\n    &:focus {color: ${p => p.theme.colors.blue}};\n`","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\n\nimport * as Yup from 'yup';\nimport \"yup-phone\"; \nimport { ErrMessage, StyledForm, StyledField, Label, BtnAdd } from './ContactForm.styled';\n\nconst quizSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too short!').required('This field is required!'),\n    number: Yup.string().matches(/^\\d{3}-\\d{3}-\\d{4}$/, 'Must be in format: 000-000-0000').required('This field is required!')\n  \n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = ({ name, number }, { resetForm } ) => {\n  const hasContact = contacts.some(contact => contact.name.toLowerCase().includes(name.toLowerCase()))\n    \n    if (hasContact) {\n      resetForm();\n      return alert(\n        `WARNING! ${name} is already in contacts`) \n    }\n    dispatch(addContact({ name, number }));\n    \n  resetForm();\n  }\n  \n    return (\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handleFormSubmit}\n        validationSchema={quizSchema}\n        >\n        <StyledForm>\n        \n          <Label>\n            Name\n            <StyledField type=\"text\" name=\"name\" placeholder=\" \" />\n            <ErrMessage name=\"name\" component=\"div\" />\n          </Label>\n\n          <Label>\n            Number (000-000-0000)\n            <StyledField type=\"text\" name=\"number\" />\n            <ErrMessage name=\"number\" component=\"div\" />\n          </Label>\n\n          <BtnAdd type=\"submit\">Add contact</BtnAdd>\n        </StyledForm>\n      </Formik>\n    );\n  };\n\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n width: 400px;\n  padding: ${p => p.theme.spacing(2)};\n\n   margin-left: ${p => p.theme.spacing(2)};\n`","import { FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectFilter).name;\n\n  return (\n    <div>\n      <h3>Find contact by name</h3>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filterName}\n        onChange={({ currentTarget: { value } }) =>\n          dispatch(setFilter(value))\n        }\n        placeholder=\"Filter by name...\"\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter/>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList/>\n    </>\n  );\n}\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","blue","BtnTrash","_templateObject2","ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","HiTrash","List","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","createSelector","item","toLowerCase","trim","includes","ContactList","useSelector","map","StyledForm","Form","StyledField","Field","ErrMessage","ErrorMessage","_templateObject3","orange","Label","_templateObject4","green","BtnAdd","_templateObject5","quizSchema","Yup","shape","min","required","matches","Formik","initialValues","onSubmit","_ref2","resetForm","some","alert","concat","addContact","validationSchema","placeholder","component","FilterInput","Filter","filterName","value","onChange","currentTarget","setFilter","Contacts","useEffect","fetchContacts","_Fragment","Helmet","ContactForm"],"sourceRoot":""}